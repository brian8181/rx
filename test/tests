/*

#MATCH
./regx "a\\\\b" "a\\b"
./regx "a\\*b" "a*b"
./regx "a\\=b" "a=b"
./regx "a\\+b" "a+b
./regx "a~b" "a~b"
./regx "a~b" "a~b"
./regx 'a`b' 'a`b'
./regx 'a-b' 'a-b'
    string exp(argv[optind]);
./regx "a-b" "a-b"
    string exp(argv[optind]);
./regx "a#b" "a#b"
./regx "a@b" "a@b"
./regx "a\\$" "a$"
./regx "a&b" "a&b"  
./regx "a\\&b" "a&b"
./regx "a\\(b" "a(b"
./regx "a\\)b" "a)b"
./regx "a\(b\)c" "a(b)c"
./regx "a\[b\]c" "a[b]c"
./regx "a\{b\}c" "a{b}c"

# STRANGE BOTH MATCH
./regx 'a"b' 'a"b'
./regx 'a\"b' 'a"b'
#NO MATCH
#./regx "a\\!b" "a!b"
# ./regx "a`b" "a`b"
# ./regx "a\\$b" "a$b"
    string exp(argv[optind]);
    string exp(argv[optind]);

# GREEDY TESTING
./regx "a.*?b" "axbb" // MATCH = axb

# TAGS
## OK
./regx "\\<([A-z]+[A-z0-9]*)\\>" "<tag1> <tag2>"
./regx "\\<([A-z]+[A-z0-9]*)\\>" "<tag1> <tag2><tag3>"

# FUNNY
./regx "\\<([A-z]+[A-z0-9\\<\\>]*?)+\\>" "<tag1<tag4>> <tag2><tag3>"

# WORKS WITH WORD BOUNDRAY \b
./regx "\\<\b([A-z]+[A-z0-9\\<\\>]*?)+\b\\>" "<tag1>. <tag2><tag3>*<tag5>&<tag6>^<tag7>|<tag8>"

*/